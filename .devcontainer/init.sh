#!/usr/bin/env bash
# .devcontainer/init.sh
#
# Assumed to be called from the initializeCommand of VS Code Dev Containers.
# 1. Determine COMPOSE_PROJECT_NAME by concatenating the project name and the host user name.
# 2. Write the host UID/GID to the .env file.
# -------------------------------------------------------------

set -euo pipefail

# Get the root (workspace) directory.
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
WORKSPACE_DIR="$(dirname "$SCRIPT_DIR")"

# 1) COMPOSE_PROJECT_NAME = <username>-<basename> (converted to lowercase alphanumerics)
host_user="$(id -un | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9_-')"
project_basename="$(basename "$WORKSPACE_DIR" | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9_-')"
COMPOSE_PROJECT_NAME="${host_user}-${project_basename}"

# 2) UID / GID
USER_ID="$(id -u)"
GROUP_ID="$(id -g)"

# Write to .env: preserve existing values for other variables
env_file="${WORKSPACE_DIR}/.env"
if [ ! -f "${env_file}" ]; then
  echo "# Auto-generated by .devcontainer/init.sh" > "${env_file}"
fi

# Function to replace existing key or append if missing
replace_or_append() {
  local key="$1" value="$2"
  if grep -q "^${key}=" "${env_file}"; then
    if [ "$(uname)" = "Darwin" ]; then
      sed -i '' "s|^${key}=.*|${key}=${value}|" "${env_file}"
    else
      sed -i "s|^${key}=.*|${key}=${value}|" "${env_file}"
    fi
  else
    echo "${key}=${value}" >> "${env_file}"
  fi
}

replace_or_append COMPOSE_PROJECT_NAME "${COMPOSE_PROJECT_NAME}"
replace_or_append USER_ID             "${USER_ID}"
replace_or_append GROUP_ID            "${GROUP_ID}"

echo ".env updated at ${env_file}:"
cat "${env_file}"
